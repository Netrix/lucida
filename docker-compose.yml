version: '2'

services:
    base:
        build:
            context: .
            dockerfile: docker/base/Dockerfile
        image: lucida/base
        entrypoint: echo 'base'

    mongodb:
        image: mongo:3.2
        volumes:
            - ./mongodb_data:/data
        expose:
            - "27017"

    commandcenter:
        depends_on:
            - base
        links:
            - mongodb
            - questionanswering
            - imagematching
            - calendar
            - speech_recognition_master
        build:
            context: .
            dockerfile: docker/commandcenter/Dockerfile
        image: lucida/commandcenter
        ports:
            - 3000:3000
        environment:
            - MONGO_PORT_27017_TCP_ADDR=mongodb
            - QA_PORT_8083_TCP_ADDR=questionanswering
            - CA_PORT_8084_TCP_ADDR=calendar
            - IMM_PORT_8082_TCP_ADDR=imagematching
#            - ASR_ADDR_PORT=localhost
        entrypoint: /bin/bash -c "source /lucida/tools/python_2_7_9/bin/activate && python app.py"

    imagematching:
        depends_on:
            - base
        build:
            context: .
            dockerfile: docker/imagematching/Dockerfile
        image: lucida/imagematching
        environment:
            - MONGO_PORT_27017_TCP_ADDR=mongodb
        entrypoint: ./opencv_imm/server/imm_server

    questionanswering:
        depends_on:
            - base
            - mongodb
        links:
            - mongodb
        build:
            context: .
            dockerfile: docker/questionanswering/Dockerfile
        image: lucida/questionanswering
        volumes:
            - /media/sf_vbshared/wiki_indri_index:/lucida/wiki_indri_index
        environment:
            - MONGO_PORT_27017_TCP_ADDR=mongodb
            - wiki_indri_index=/lucida/wiki_indri_index
        entrypoint: ./start_server.sh

    calendar:
        depends_on:
            - base
        build:
            context: .
            dockerfile: docker/calendar/Dockerfile
        image: lucida/calendar
        entrypoint: ./gradlew run

    speech_recognition_base:
        build:
            context: .
            dockerfile: docker/speechrecognition/Dockerfile
        image: lucida/speechrecognition
        entrypoint: echo "sr_base"

    speech_recognition_master:
        depends_on:
            - speech_recognition_base
        image: lucida/speechrecognition
        expose:
            - "8081"
        ports:
            - "8081:8081"
        entrypoint: /bin/bash -c "source /lucida/tools/python_2_7_9/bin/activate && python kaldigstserver/master_server.py --port=8081"

    speechrecognition:
        depends_on:
            - speech_recognition_base
        image: lucida/speechrecognition
        links:
            - speech_recognition_master
        environment:
            - GST_PLUGIN_PATH=/lucida/lucida/speechrecognition/kaldi_gstreamer_asr/kaldi/tools/gst-kaldi-nnet2-online/src
        entrypoint: python kaldigstserver/worker.py -u ws://speech_recognition_master:8081/worker/ws/speech -c sample_english_nnet2.yaml

    djinntonic_base:
        depends_on:
            - base
        build:
            context: .
            dockerfile: docker/djinntonic_base/Dockerfile
        image: lucida/djinntonic_base

    djinntonic_imc:
        depends_on:
            - djinntonic_base
        build:
            context: .
            dockerfile: docker/djinntonic_imc/Dockerfile
        image: lucida/djinntonic_imc
        entrypoint: /bin/bash -c "./IMCServer"

    djinntonic_dig:
        depends_on:
            - djinntonic_base
        build:
            context: .
            dockerfile: docker/djinntonic_dig/Dockerfile
        image: lucida/djinntonic_dig
        entrypoint: /bin/bash -c "./DIGServer"

    djinntonic_face:
        depends_on:
            - djinntonic_base
        build:
            context: .
            dockerfile: docker/djinntonic_face/Dockerfile
        image: lucida/djinntonic_face
        entrypoint: /bin/bash -c "./FACEServer"
